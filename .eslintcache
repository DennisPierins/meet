[{"/mnt/c/Users/denni/Documents/GitHub/meet/src/index.js":"1","/mnt/c/Users/denni/Documents/GitHub/meet/src/App.js":"2","/mnt/c/Users/denni/Documents/GitHub/meet/src/reportWebVitals.js":"3","/mnt/c/Users/denni/Documents/GitHub/meet/src/CitySearch.js":"4","/mnt/c/Users/denni/Documents/GitHub/meet/src/NumberOfEvents.js":"5","/mnt/c/Users/denni/Documents/GitHub/meet/src/EventList.js":"6","/mnt/c/Users/denni/Documents/GitHub/meet/src/api.js":"7","/mnt/c/Users/denni/Documents/GitHub/meet/src/Event.js":"8","/mnt/c/Users/denni/Documents/GitHub/meet/src/mock-data.js":"9","/mnt/c/Users/denni/Documents/GitHub/meet/src/Alert.js":"10","/mnt/c/Users/denni/Documents/GitHub/meet/src/serviceWorker.js":"11","/mnt/c/Users/denni/Documents/GitHub/meet/src/EventGenre.js":"12"},{"size":398,"mtime":1610891237132,"results":"13","hashOfConfig":"14"},{"size":3510,"mtime":1611160138007,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608214062624,"results":"16","hashOfConfig":"17"},{"size":2305,"mtime":1610635381331,"results":"18","hashOfConfig":"14"},{"size":1039,"mtime":1611146673549,"results":"19","hashOfConfig":"14"},{"size":393,"mtime":1609160274103,"results":"20","hashOfConfig":"14"},{"size":3463,"mtime":1610895309377,"results":"21","hashOfConfig":"14"},{"size":1311,"mtime":1610205896238,"results":"22","hashOfConfig":"14"},{"size":3142,"mtime":1609167614382,"results":"23","hashOfConfig":"14"},{"size":789,"mtime":1610895671788,"results":"24","hashOfConfig":"14"},{"size":5221,"mtime":1610890480939,"results":"25","hashOfConfig":"14"},{"size":1374,"mtime":1624283520052,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ow1o02",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"ms066l",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},"/mnt/c/Users/denni/Documents/GitHub/meet/src/index.js",[],["56","57"],"/mnt/c/Users/denni/Documents/GitHub/meet/src/App.js",["58"],"import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventGenre from './EventGenre';\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\nimport { OfflineAlert } from './Alert';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList } from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n    alertText: \"\",\n  };\n\n  updateEvents = (location, eventCount) => {\n    if (!navigator.onLine) {\n      this.setState({\n        alertText:\n          \"It seems you've lost connection! Please reconnect to see an updated list of events.\",\n      });\n    } else {\n      this.setState({ alertText: \"\" });\n    }\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events,\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(' ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <h4>Choose your nearest city:</h4>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <h4>Number of events (max. 32):</h4>\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} /><br></br>\n        <div className=\"data-vis-wrapper\">\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer height={400} >\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }} >\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <OfflineAlert text={this.state.alertText} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/mnt/c/Users/denni/Documents/GitHub/meet/src/reportWebVitals.js",[],["59","60"],"/mnt/c/Users/denni/Documents/GitHub/meet/src/CitySearch.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/NumberOfEvents.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/EventList.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/api.js",["61","62"],"import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n// This function takes an events array, then uses map to create a new array with only locations.\r\n// It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n// The Set will remove all duplicates from the array.\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const extractEvents = (events) => {\r\n  var extractEvents = events.map((event) => event);\r\n  var oneEvent = [...new Set(extractEvents)];\r\n  return oneEvent;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (\r\n    !navigator.onLine &&\r\n    !window.location.href.startsWith(\"http://localhost\")\r\n  ) {\r\n    const events = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return JSON.parse(events).events;\r\n  }\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","/mnt/c/Users/denni/Documents/GitHub/meet/src/Event.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/mock-data.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/Alert.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/serviceWorker.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/EventGenre.js",["63"],"import React, { useEffect, useState } from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\r\n\r\nconst EventGenre = ({ events }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(() => getData());\r\n  }, [events]);\r\n\r\n  const getData = (genre) => {\r\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\r\n    const data = genres.map((genre) => {\r\n      const value = events.filter(({ summary }) =>\r\n        summary.split(\" \").includes(genre)\r\n      ).length;\r\n      return { name: genre, value };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const colors = [\"#8886d5\", \"#85a7ea\", \"#8fd1e0\", \"#84c99e\", \"#a5dc72\"];\r\n\r\n  return (\r\n    <ResponsiveContainer height={400}>\r\n      <PieChart height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label={({ name, percent }) =>\r\n            `${percent > 0 ? name : \"\"} ${\r\n              percent > 0 ? (percent * 100).toFixed(0) + \"%\" : \"\"\r\n            }`\r\n          }\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EventGenre;\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":10,"column":92,"nodeType":"70","messageId":"71","endLine":10,"endColumn":101},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":52,"column":93,"nodeType":"76","messageId":"77","endLine":52,"endColumn":94},{"ruleId":"74","severity":1,"message":"75","line":101,"column":76,"nodeType":"76","messageId":"77","endLine":101,"endColumn":77},{"ruleId":"78","severity":1,"message":"79","line":8,"column":6,"nodeType":"80","endLine":8,"endColumn":14,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'LabelList' is defined but never used.","Identifier","unusedVar",["82"],["83"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [events, getData]",{"range":"87","text":"88"},[261,269],"[events, getData]"]