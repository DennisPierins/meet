[{"/mnt/c/Users/denni/Documents/GitHub/meet/src/index.js":"1","/mnt/c/Users/denni/Documents/GitHub/meet/src/App.js":"2","/mnt/c/Users/denni/Documents/GitHub/meet/src/reportWebVitals.js":"3","/mnt/c/Users/denni/Documents/GitHub/meet/src/CitySearch.js":"4","/mnt/c/Users/denni/Documents/GitHub/meet/src/NumberOfEvents.js":"5","/mnt/c/Users/denni/Documents/GitHub/meet/src/EventList.js":"6","/mnt/c/Users/denni/Documents/GitHub/meet/src/api.js":"7","/mnt/c/Users/denni/Documents/GitHub/meet/src/Event.js":"8","/mnt/c/Users/denni/Documents/GitHub/meet/src/mock-data.js":"9"},{"size":500,"mtime":1608214062622,"results":"10","hashOfConfig":"11"},{"size":1952,"mtime":1609853979469,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608214062624,"results":"13","hashOfConfig":"11"},{"size":1494,"mtime":1609771174715,"results":"14","hashOfConfig":"11"},{"size":724,"mtime":1609849906137,"results":"15","hashOfConfig":"11"},{"size":393,"mtime":1609160274103,"results":"16","hashOfConfig":"11"},{"size":3241,"mtime":1609768678261,"results":"17","hashOfConfig":"11"},{"size":1293,"mtime":1609756192183,"results":"18","hashOfConfig":"11"},{"size":3142,"mtime":1609167614382,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ms066l",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/mnt/c/Users/denni/Documents/GitHub/meet/src/index.js",[],["40","41"],"/mnt/c/Users/denni/Documents/GitHub/meet/src/App.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/reportWebVitals.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/CitySearch.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/NumberOfEvents.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/EventList.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/api.js",["42","43"],"import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n// This function takes an events array, then uses map to create a new array with only locations.\r\n// It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n// The Set will remove all duplicates from the array.\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const extractEvents = (events) => {\r\n  var extractEvents = events.map((event) => event);\r\n  var oneEvent = [...new Set(extractEvents)];\r\n  return oneEvent;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://j0uvphcgcg.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","/mnt/c/Users/denni/Documents/GitHub/meet/src/Event.js",[],"/mnt/c/Users/denni/Documents/GitHub/meet/src/mock-data.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":44,"column":93,"nodeType":"50","messageId":"51","endLine":44,"endColumn":94},{"ruleId":"48","severity":1,"message":"49","line":93,"column":76,"nodeType":"50","messageId":"51","endLine":93,"endColumn":77},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]